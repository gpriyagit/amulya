pipeline {
    agent any
    
    environment {
        SONARQUBE = sonarqube
        SONAR_TOKEN = sonar-token
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Run the SonarQube analysis
                    withSonarQubeEnv(SONARQUBE) {
                        sh """
                           mvn clean verify sonar:sonar \
                           -Dsonar.projectKey=my-project \
                           -Dsonar.host.url=http://43.204.141.140:9000 \
                           -Dsonar.login=${SONAR_TOKEN}
                        """
                    }
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    // Wait for the analysis to complete and check the Quality Gate
                    timeout(time: 1, unit: 'HOURS') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                // Deployment commands here
            }
        }
    }
}
